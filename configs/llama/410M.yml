# GPT-2 pretraining setup
{
  # parallelism settings ( you will want to change these based on your cluster setup, ideally scheduling pipeline stages
  # across the node boundaries )
  "pipe-parallel-size": 1,
  "model-parallel-size": 1, # one copy of the model per node

  # model settings
  "num-layers": 24,
  "hidden-size": 1024,
  "num-attention-heads": 16,
  "seq-length": 2048,
  "max-position-embeddings": 2048,
  "pos-emb": "rotary",
  "rotary-pct": 0.25,
  "no-weight-tying": true,
  "gpt-j-residual": true,
  "output-layer-parallelism": "column",

  # these should provide some speedup but takes a while to build, set to true if desired
  "scaled-upper-triang-masked-softmax-fusion": true,
  "bias-gelu-fusion": true,

  # init methods
  "init_method": "small_init",
  "output_layer_init_method": "wang_init",

  # "optimizer": {
  #   "type": "Adam",
  #   "params": {
  #     "lr": 3.0e-4,
  #     "betas": [0.9, 0.95],
  #     "eps": 1.0e-8,
  #   }
  # },
  # "min_lr": 3.0e-5,

  "zero_optimization": {
    "stage": 1,
    "allgather_partitions": True,
    "allgather_bucket_size": 500000000,
    "overlap_comm": True,
    "reduce_scatter": True,
    "reduce_bucket_size": 500000000,
    "contiguous_gradients": True,
    "cpu_offload": False
  },

  # LLAMA Config
  # batch / data settings
  "train_batch_size": 1104, #1104, #1104, #1104, #1104, #1104 # approximately 2.2M batch size across 46 nodes 
  "train_micro_batch_size_per_gpu": 4,
  "data-impl": "mmap",
  "split": "949,50,1",


  # misc. training settings
  "train-iters": 6000,
  "lr-decay-iters": 6000,

  # activation checkpointing
  "checkpoint-activations": true,
  "checkpoint-num-layers": 1,
  "partition-activations": true,
  "synchronize-each-layer": true,

  # regularization
  "gradient_clipping": 1.0,
  "weight-decay": 0.1,
  "hidden-dropout": 0.0,
  "attention-dropout": 0.0,

  # precision settings of LLaMa
  "fp16": {
    "enabled": true,
    # "type": "bfloat16", # set bf16 as precision
    "loss_scale": 0,
    "loss_scale_window": 1000,
    "hysteresis": 2,
    "min_loss_scale": 1
  },

  # "fp32_allreduce": True, # without a patch to torch, bf16 models have to do the allreduce in fp32



  "distributed-backend": "nccl",
  # "lr-decay-style": "cosine",
  # "warmup": 0.01,
  "checkpoint-factor": 1000,
  "eval-interval": 100,
  "warup-eval-interval": 50,
  "eval-iters": 10,

  # logging
  "log-interval": 1,
  "steps_per_print": 1,
  "keep-last-n-checkpoints": 1000,
  "wall_clock_breakdown": true,

  "identifier_string": "pythia-deduped-410M"
}